# Generated by Django 5.1.3 on 2024-12-08 18:53

import catadoption.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('age', models.CharField(choices=[('Kitten', 'Kitten'), ('Young Adult', 'Young Adult'), ('Adult', 'Adult'), ('Senior', 'Senior')], max_length=100, verbose_name='Age')),
                ('photo', imagekit.models.fields.ProcessedImageField(upload_to='cats/')),
                ('sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6, verbose_name='Sex')),
                ('breed', models.CharField(choices=[('Domestic Shorthair', 'Domestic Shorthair'), ('Domestic Longhair', 'Domestic Longhair'), ('Siamese', 'Siamese'), ('Ragdoll', 'Ragdoll'), ('Tabby', 'Tabby'), ('Calico', 'Calico'), ('Tortoiseshell', 'Tortoiseshell'), ('Russian Blue', 'Russian Blue'), ('Tuxedo', 'Tuxedo'), ('Persian', 'Persian'), ('Bombay', 'Bombay'), ('Maine Coon', 'Maine Coon'), ('Sphynx', 'Sphynx')], max_length=100, verbose_name='Breed')),
                ('coat_length', models.CharField(choices=[('Short', 'Short'), ('Medium', 'Medium'), ('Long', 'Long')], max_length=10, verbose_name='Coat length')),
                ('temperament', models.CharField(choices=[('Shy', 'Shy'), ('Calm', 'Calm'), ('Social', 'Social'), ('Playful', 'Playful')], max_length=20, verbose_name='Temperament')),
                ('has_special_needs', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ModifiedUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile_pic', imagekit.models.fields.ProcessedImageField(upload_to='profile/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdoptionProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField()),
                ('phone_number', models.CharField(max_length=20, validators=[catadoption.models.validate_phone])),
                ('street_number', models.PositiveIntegerField()),
                ('street_name', models.CharField(max_length=100)),
                ('street_type', models.CharField(max_length=100, validators=[catadoption.models.validate_street_type])),
                ('city', models.CharField(max_length=100)),
                ('province', models.CharField(choices=[('AB', 'Alberta'), ('BC', 'British Columbia'), ('MB', 'Manitoba'), ('NB', 'New Brunswick'), ('NL', 'Newfoundland and Labrador'), ('NT', 'Northwest Territories'), ('NS', 'Nova Scotia'), ('NU', 'Nunavut'), ('ON', 'Ontario'), ('PE', 'Prince Edward Island'), ('QC', 'Quebec'), ('SK', 'Saskatchewan'), ('YT', 'Yukon')], max_length=100)),
                ('has_children', models.BooleanField(default=False)),
                ('has_pets', models.BooleanField(default=False)),
                ('has_allergies', models.BooleanField(default=False)),
                ('sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('no_preference', 'No Preference')], default='no_preference', max_length=15)),
                ('age', models.CharField(choices=[('Kitten', 'Kitten'), ('Young Adult', 'Young Adult'), ('Adult', 'Adult'), ('Senior', 'Senior'), ('no_preference', 'No Preference')], default='no_preference', max_length=100)),
                ('breed', models.CharField(choices=[('Domestic Shorthair', 'Domestic Shorthair'), ('Domestic Longhair', 'Domestic Longhair'), ('Siamese', 'Siamese'), ('Ragdoll', 'Ragdoll'), ('Tabby', 'Tabby'), ('Calico', 'Calico'), ('Tortoiseshell', 'Tortoiseshell'), ('Russian Blue', 'Russian Blue'), ('Tuxedo', 'Tuxedo'), ('Persian', 'Persian'), ('Bombay', 'Bombay'), ('Maine Coon', 'Maine Coon'), ('Sphynx', 'Sphynx'), ('no_preference', 'No Preference')], default='no_preference', max_length=100)),
                ('coat_length', models.CharField(choices=[('Short', 'Short'), ('Medium', 'Medium'), ('Long', 'Long'), ('no_preference', 'No Preference')], default='no_preference', max_length=15)),
                ('temperament', models.CharField(choices=[('Shy', 'Shy'), ('Calm', 'Calm'), ('Social', 'Social'), ('Playful', 'Playful'), ('no_preference', 'No Preference')], default='no_preference', max_length=20)),
                ('special_needs_pref', models.BooleanField(default=False)),
                ('several_cats_pref', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='adoption_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AdoptionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Decision Made', 'Decision made')], default='Pending', max_length=100)),
                ('date', models.DateField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adoption_request', to=settings.AUTH_USER_MODEL)),
                ('cat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adoption_request', to='catadoption.cat')),
            ],
        ),
    ]
